# Development Dockerfile for dev container
FROM python:3.11-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/workspace/backend \
    DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        # Build tools
        build-essential \
        gcc \
        g++ \
        make \
        # Network tools
        curl \
        wget \
        netcat-traditional \
        # Development tools
        git \
        vim \
        nano \
        tree \
        htop \
        # Process management
        procps \
        # For MongoDB tools
        gnupg \
        # For debugging
        gdb \
        strace \
        # Shell tools
        zsh \
        fish \
        # Additional utilities
        jq \
        unzip \
        zip \
        # For pre-commit hooks
        nodejs \
        npm \
    && rm -rf /var/lib/apt/lists/*

# Create vscode user with sudo privileges
RUN groupadd --gid 1000 vscode \
    && useradd --uid 1000 --gid vscode --shell /bin/bash --create-home vscode \
    && apt-get update \
    && apt-get install -y sudo \
    && echo vscode ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/vscode \
    && chmod 0440 /etc/sudoers.d/vscode \
    && rm -rf /var/lib/apt/lists/*

# Set up workspace directory
WORKDIR /workspace
RUN chown -R vscode:vscode /workspace

# Switch to vscode user
USER vscode

# Install Python development tools globally for the user
RUN pip install --user --no-cache-dir \
    # Core development tools
    black \
    isort \
    flake8 \
    mypy \
    pytest \
    pytest-asyncio \
    pytest-cov \
    pytest-mock \
    pytest-watch \
    # Additional development tools
    pre-commit \
    ipython \
    ipdb \
    rich \
    # FastAPI development
    uvicorn[standard] \
    httpx \
    # MongoDB tools
    pymongo \
    motor \
    mongomock-motor

# Add user's pip bin to PATH
ENV PATH="/home/vscode/.local/bin:${PATH}"

# Install Oh My Zsh for better shell experience
RUN sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended

# Set up shell aliases and environment
RUN echo 'alias ll="ls -la"' >> ~/.bashrc \
    && echo 'alias la="ls -la"' >> ~/.bashrc \
    && echo 'alias ..="cd .."' >> ~/.bashrc \
    && echo 'alias ...="cd ../.."' >> ~/.bashrc \
    && echo 'alias grep="grep --color=auto"' >> ~/.bashrc \
    && echo 'alias fgrep="fgrep --color=auto"' >> ~/.bashrc \
    && echo 'alias egrep="egrep --color=auto"' >> ~/.bashrc \
    && echo 'export PYTHONPATH="/workspace/backend:$PYTHONPATH"' >> ~/.bashrc \
    && echo 'cd /workspace' >> ~/.bashrc

# Copy the same aliases to zshrc
RUN echo 'alias ll="ls -la"' >> ~/.zshrc \
    && echo 'alias la="ls -la"' >> ~/.zshrc \
    && echo 'alias ..="cd .."' >> ~/.zshrc \
    && echo 'alias ...="cd ../.."' >> ~/.zshrc \
    && echo 'alias grep="grep --color=auto"' >> ~/.zshrc \
    && echo 'alias fgrep="fgrep --color=auto"' >> ~/.zshrc \
    && echo 'alias egrep="egrep --color=auto"' >> ~/.zshrc \
    && echo 'export PYTHONPATH="/workspace/backend:$PYTHONPATH"' >> ~/.zshrc \
    && echo 'cd /workspace' >> ~/.zshrc

# Expose ports for development
EXPOSE 8000 5678

# Keep container running
CMD ["sleep", "infinity"]

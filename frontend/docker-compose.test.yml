# Docker Compose configuration for running tests
# Usage: docker-compose -f docker-compose.test.yml run --rm frontend-test

version: "3.8"

services:
  # Frontend test service
  frontend-test:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      # Mount source code for live testing
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=test
      - CI=true
    command: npm test
    working_dir: /app

  # Frontend test with coverage
  frontend-test-coverage:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
      # Mount coverage output directory
      - ./coverage:/app/coverage
    environment:
      - NODE_ENV=test
      - CI=true
    command: npm run test:coverage
    working_dir: /app

  # Frontend test in watch mode (for development)
  frontend-test-watch:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=test
      - CI=false
    command: npm run test:watch
    working_dir: /app
    stdin_open: true
    tty: true

  # Frontend test with specific test file
  frontend-test-file:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=test
      - CI=true
    # Override command when running
    # Example: docker-compose -f docker-compose.test.yml run --rm frontend-test-file npm test -- user-form.test.tsx
    working_dir: /app
